langstring.converter
====================

.. py:module:: langstring.converter

.. autoapi-nested-parse::

   This module provides a Converter class for converting between different string types used in language processing.

   The Converter class is designed as a utility class to facilitate the conversion between `LangString`, `SetLangString`,
   and `MultiLangString` objects. These objects represent different ways of handling language-tagged strings, which are
   common in applications dealing with multilingual data. The class methods in Converter allow for seamless and efficient
   transformation of these string types, ensuring compatibility and ease of use in various language processing tasks.

   Classes:
       Converter: Provides methods for converting between `LangString`, `SetLangString`, and `MultiLangString`.

   Usage:
       The Converter class is used as a utility and should not be instantiated. Instead, its class methods are called
       directly to perform conversions. For example, `Converter.to_langstring(arg_obj)` where `arg_obj` could
       be an instance of `SetLangString` or `MultiLangString`.

   Note:
       The module is designed with the assumption that the arg objects are well-formed instances of their respective
       classes. Error handling is provided for type mismatches, but not for malformed objects.

   This module is part of a larger package dealing with language processing and RDF data manipulation, providing
   foundational tools for handling multilingual text data in various formats.



Classes
-------

.. autoapisummary::

   langstring.converter.Converter


Module Contents
---------------

.. py:class:: Converter

   A utility class for converting between different string types used in language processing.

   This class provides methods to convert between `LangString`, `SetLangString`, and `MultiLangString` types.
   It is designed to be non-instantiable as it serves as a utility class with class methods only.


   .. py:method:: from_string_to_langstring(method, input_string, lang = None, separator = '@')
      :classmethod:


      Convert a string to a LangString using the specified method.

      :param method: The method to use for conversion ('manual' or 'parse').
      :type method: str
      :param input_string: The text to be converted.
      :type input_string: str
      :param lang: The language code (used only with 'manual' method).
      :type lang: Optional[str]
      :param separator: The separator used to split the text and language (used only with 'parse' method).
      :type separator: str
      :return: A LangString object with the converted text and language.
      :rtype: LangString
      :raises ValueError: If the method is unknown.



   .. py:method:: from_string_to_langstring_manual(input_string, lang)
      :staticmethod:


      Convert a string to a LangString with the specified language.

      :param input_string: The text to be converted.
      :type input_string: str
      :param lang: The language code.
      :type lang: Optional[str]
      :return: A LangString object with the provided text and language.
      :rtype: LangString



   .. py:method:: from_string_to_langstring_parse(input_string, separator = '@')
      :staticmethod:


      Convert a string to a LangString by parsing it with the given separator.

      This function splits the input string into text and language components based on the last occurrence of the
      specified separator. If the separator is not found, the entire string is considered as text and lang is set
      to "" (empty string).

      :param input_string: The text to be converted.
      :type input_string: str
      :param separator: The separator used to split the text and language.
      :type separator: str
      :return: A LangString object with the parsed text and language.
      :rtype: LangString



   .. py:method:: from_strings_to_langstrings(method, strings, lang = None, separator = '@')
      :classmethod:


      Convert a list of strings to a list of LangStrings using the specified method.

      :param method: The method to use for conversion ('manual' or 'parse').
      :type method: str
      :param strings: List of strings to be converted.
      :type strings: list[str]
      :param lang: The language code for 'manual' method.
      :type lang: Optional[str]
      :param separator: The separator used in 'parse' method.
      :type separator: str
      :return: A list of LangString objects.
      :rtype: list[LangString]
      :raises ValueError: If an unknown method is specified.
      :raises TypeError: If the input types are incorrect.



   .. py:method:: from_strings_to_setlangstring(strings, lang = None)
      :classmethod:


      Convert a list of strings to a SetLangString using the 'manual' method.

      :param strings: List of strings to be converted.
      :param lang: Language code for the 'manual' method. Optional.
      :return: A SetLangString object.



   .. py:method:: from_strings_to_multilangstring(method, strings, lang = None, separator = '@')
      :classmethod:


      Convert a list of strings to a MultiLangString using the specified method.

      :param method: Method to use for conversion ("manual", or "parse").
      :param strings: List of strings to be converted.
      :param lang: Language code for the "manual" method. Optional.
      :param separator: Separator for the "parse" method. Default is "@".
      :return: A MultiLangString object.



   .. py:method:: from_langstring_to_string(arg, print_quotes = None, separator = '@', print_lang = None)
      :staticmethod:



   .. py:method:: from_langstrings_to_strings(arg, print_quotes = None, separator = '@', print_lang = None)
      :staticmethod:



   .. py:method:: from_langstring_to_setlangstring(arg)
      :staticmethod:


      Convert a LangString to a SetLangString.

      This method creates a SetLangString from a LangString. The resulting SetLangString contains the text of the
      LangString in a set and retains its language.

      :param arg: The LangString to be converted.
      :type arg: LangString
      :return: A SetLangString containing the text from the arg LangString.
      :rtype: SetLangString
      :raises TypeError: If the arg is not of type LangString.



   .. py:method:: from_langstrings_to_setlangstring(arg)
      :staticmethod:



   .. py:method:: from_langstrings_to_setlangstrings(arg)
      :classmethod:



   .. py:method:: from_langstring_to_multilangstring(arg)
      :staticmethod:


      Convert a LangString to a MultiLangString.

      This method takes a single LangString and converts it into a MultiLangString. The resulting MultiLangString
      contains the text and language of the arg LangString.

      :param arg: The LangString to be converted.
      :type arg: LangString
      :return: A MultiLangString containing the text and language from the arg LangString.
      :rtype: MultiLangString
      :raises TypeError: If the arg is not of type LangString.



   .. py:method:: from_langstrings_to_multilangstring(arg)
      :staticmethod:



   .. py:method:: from_setlangstring_to_string(arg)
      :staticmethod:



   .. py:method:: from_setlangstring_to_strings(arg, print_quotes = None, separator = '@', print_lang = None)
      :staticmethod:



   .. py:method:: from_setlangstrings_to_strings(arg, print_quotes = None, separator = '@', print_lang = None)
      :staticmethod:



   .. py:method:: from_setlangstring_to_langstrings(arg)
      :staticmethod:


      Convert a SetLangString to a list of LangStrings.

      This method takes a SetLangString and converts it into a list of LangStrings, each containing one of the texts
      from the SetLangString and its associated language.

      :param arg: The SetLangString to be converted.
      :type arg: SetLangString
      :return: A list of LangStrings, each corresponding to a text in the arg SetLangString.
      :rtype: list[LangString]
      :raises TypeError: If the arg is not of type SetLangString.



   .. py:method:: from_setlangstrings_to_langstrings(arg)
      :staticmethod:



   .. py:method:: from_setlangstring_to_multilangstring(arg)
      :staticmethod:


      Convert a SetLangString to a MultiLangString.

      This method creates a MultiLangString from a SetLangString. The resulting MultiLangString contains all texts
      from the SetLangString, associated with its language.

      :param arg: The SetLangString to be converted.
      :type arg: SetLangString
      :return: A MultiLangString containing all texts from the arg SetLangString.
      :rtype: MultiLangString
      :raises TypeError: If the arg is not of type SetLangString.



   .. py:method:: from_setlangstrings_to_multilangstring(arg)
      :staticmethod:


      Convert a list of SetLangString objects to a MultiLangString object.

      If there are different casings for the same lang tag among the SetLangString objects in the input list,
      the casefolded version of the lang tag is used. If only a single case is used, that case is adopted.

      :param setlangstrings: List of SetLangString instances to be converted.
      :return: A MultiLangString instance with aggregated texts under normalized language tags.



   .. py:method:: from_multilangstring_to_string(arg)
      :staticmethod:



   .. py:method:: from_multilangstring_to_strings(arg, langs = None, print_quotes = None, separator = '@', print_lang = None)
      :staticmethod:



   .. py:method:: from_multilangstrings_to_strings(arg, languages = None, print_quotes = True, separator = '@', print_lang = True)
      :staticmethod:



   .. py:method:: from_multilangstring_to_langstrings(arg, languages = None)
      :staticmethod:


      Convert a MultiLangString to a list of LangStrings.

      This method takes a MultiLangString and converts it into a list of LangStrings, each representing one of the
      texts in the MultiLangString along with its associated language.

      :param arg: The MultiLangString to be converted.
      :type arg: MultiLangString
      :return: A list of LangStrings, each corresponding to a text in the arg MultiLangString.
      :rtype: list[LangString]
      :raises TypeError: If the arg is not of type MultiLangString.



   .. py:method:: from_multilangstrings_to_langstrings(arg, languages = None)
      :staticmethod:



   .. py:method:: from_multilangstring_to_setlangstrings(arg, languages = None)
      :staticmethod:


      Convert a MultiLangString to a list of SetLangStrings.

      This method creates a list of SetLangStrings from a MultiLangString. Each SetLangString in the list contains
      texts of a single language from the MultiLangString.

      :param arg: The MultiLangString to be converted.
      :type arg: MultiLangString
      :return: A list of SetLangStrings, each containing texts of a single language from the arg MultiLangString.
      :rtype: list[SetLangString]
      :raises TypeError: If the arg is not of type MultiLangString.



   .. py:method:: from_multilangstrings_to_setlangstrings(arg, languages = None)
      :staticmethod:



