:py:mod:`langstring.multilangstring`
====================================

.. py:module:: langstring.multilangstring

.. autoapi-nested-parse::

   This module defines the `MultiLangString` class for handling multilingual text strings.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   langstring.multilangstring.ControlMultipleEntries
   langstring.multilangstring.MultiLangString




.. py:class:: ControlMultipleEntries(*args, **kwds)


   Bases: :py:obj:`enum.Enum`

   ControlMultipleEntries Enum for specifying handling of duplicate language tags.

   Enum Members:
       OVERWRITE: Overwrite existing entries with the same language tag.
       ALLOW: Allow multiple entries with the same language tag.
       BLOCK_WARN: Block and log a warning for duplicate language tags.
       BLOCK_ERROR: Block and raise an error for duplicate language tags.

   .. py:attribute:: OVERWRITE
      :value: 'OVERWRITE'

      

   .. py:attribute:: ALLOW
      :value: 'ALLOW'

      

   .. py:attribute:: BLOCK_WARN
      :value: 'BLOCK_WARN'

      

   .. py:attribute:: BLOCK_ERROR
      :value: 'BLOCK_ERROR'

      


.. py:class:: MultiLangString(*args, control = 'ALLOW', preferred_lang = 'en')


   MultiLangString class for handling multilingual text strings.

   This class allows the management of multilingual text strings with different language tags.

   :ivar control: The control strategy for handling duplicate language tags.
   :vartype control: ControlMultipleEntries
   :ivar langstrings: A dictionary of LangStrings indexed by language tag.
   :vartype langstrings: dict
   :ivar preferred_lang: The preferred language for this MultiLangString.
   :vartype preferred_lang: Language

   .. py:method:: add(langstring)

      Add a LangString to the MultiLangString.

      :param langstring: The LangString to add.
      :type langstring: LangString


   .. py:method:: get_langstring(lang)

      Get LangStrings for a specific language tag.

      :param lang: The language tag to retrieve LangStrings for.
      :type lang: str
      :return: List of LangStrings for the specified language tag.
      :rtype: list


   .. py:method:: get_pref_langstring()

      Get the preferred language's LangString.

      :return: The LangString for the preferred language.
      :rtype: str


   .. py:method:: remove_langstring(langstring)

      Remove a LangString from the MultiLangString.

      :param langstring: The LangString to remove.
      :type langstring: LangString
      :return: True if the LangString was removed, False otherwise.
      :rtype: bool


   .. py:method:: remove_language(language_code)

      Remove all LangStrings associated with a specific language code.

      This method attempts to remove all LangStrings that match the given language code. If the
      language code is found and entries are removed, the method returns `True`. If the language
      code isn't found, the method returns `False`. For invalid language_code formats, a
      `ValueError` is raised.

      :param str language_code: The language code (e.g., "en", "fr") for which to remove LangStrings.
      :return: True if the language entries were removed, False otherwise.
      :rtype: bool
      :raises ValueError: If the provided language_code isn't valid or contains non-alphabetical chars.


   .. py:method:: to_string()

      Convert the MultiLangString to a string.

      :return: The string representation of the MultiLangString.
      :rtype: str


   .. py:method:: to_string_list()

      Convert the MultiLangString to a list of strings.

      :return: List of strings representing the MultiLangString.
      :rtype: list


   .. py:method:: __repr__()

      Return a string representation of the MultiLangString object.

      :return: A string representation of the MultiLangString.
      :rtype: str


   .. py:method:: __len__()

      Return the total number of LangStrings stored in the MultiLangString.

      :return: The total number of LangStrings.
      :rtype: int


   .. py:method:: __str__()

      Return a string representation of the MultiLangString, including language tags.

      :return: A string representation of the MultiLangString with language tags.
      :rtype: str



