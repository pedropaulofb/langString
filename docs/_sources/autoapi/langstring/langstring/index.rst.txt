:py:mod:`langstring.langstring`
===============================

.. py:module:: langstring.langstring

.. autoapi-nested-parse::

   The langstring module provides the LangString class to encapsulate a string with its language information.

   This module is designed to work with text strings and their associated language tags, offering functionalities
   such as validation of language tags, handling of empty strings and language tags based on control flags, and
   logging of warnings for invalid language tags. It utilizes the langcodes library for validating language tags and
   the loguru library for logging warnings in case of invalid language tags.

   Control flags from the langstring_control module are used to enforce certain behaviors like ensuring non-empty
   text and valid language tags. These flags can be set externally to alter the behavior of the LangString class.

   :Example:

       # Create a LangString object
       lang_str = LangString("Hello, World!", "en")

       # Print the string representation
       print(lang_str.to_string())  # Output: '"Hello, World!"@en'



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   langstring.langstring.LangString




.. py:class:: LangString(text = '', lang = None)


   A class to encapsulate a string with its language information.

   This class provides functionality to associate a text string with a language tag, offering methods for string
   representation, equality comparison, and hashing. The behavior of this class is influenced by control flags
   from the LangStringControl class, which can enforce non-empty text, valid language tags, and other constraints.

   :ivar text: The actual text string.
   :vartype text: str
   :ivar lang: The language of the text, represented by a language tag or None if not specified.
   :vartype lang: str or None

   .. py:method:: to_string()

      Convert the LangString object to a string representation.

      This method is a convenience wrapper for the __str__ method.

      :return: The string representation of the LangString object, including language tag if present.
      :rtype: str


   .. py:method:: __str__()

      Define the string representation of the LangString object.

      :return: The string representation of the LangString object. Format: '"text"@lang' or '"text"' if lang is None.
      :rtype: str


   .. py:method:: __eq__(other)

      Check equality of this LangString with another object.

      :param other: Another object to compare with.
      :type other: object
      :return: True if 'other' is a LangString object with the same text and language tag, False otherwise.
      :rtype: bool


   .. py:method:: __hash__()

      Generate a hash value for a LangString object.

      :return: The hash value of the LangString object, based on its text and language tag.
      :rtype: int


   .. py:method:: _validate_arguments_types()

      Validate the types of the 'text' and 'lang' arguments.

      Ensures that 'text' is a string and 'lang' is either a string or None. Raises a TypeError if the types do not
      match the expected types.

      :raises TypeError: If 'text' is not a string or if 'lang' is provided and is not a string or None.


   .. py:method:: _validate_ensure_text()

      Validate the 'text' argument based on the ENSURE_TEXT control flag.

      Checks if the 'text' field is empty and raises a ValueError or warning depending on the ENSURE_TEXT and
      VERBOSE_MODE flags set in LangStringControl.

      :raises ValueError: If ENSURE_TEXT is enabled and 'text' is an empty string.


   .. py:method:: _validate_ensure_any_lang()

      Validate the 'lang' argument based on the ENSURE_ANY_LANG and ENSURE_VALID_LANG control flags.

      Checks if the 'lang' field is empty and raises a ValueError or warning depending on the ENSURE_ANY_LANG,
      ENSURE_VALID_LANG, and VERBOSE_MODE flags set in LangStringControl.

      :raises ValueError: If ENSURE_ANY_LANG or ENSURE_VALID_LANG is enabled and 'lang' is an empty string.


   .. py:method:: _validate_ensure_valid_lang()

      Validate the language tag for its validity.

      This method checks if the language tag is valid. If the tag is invalid, it raises a warning or an error
      depending on the control flags set in LangStringControl.

      :raises ValueError: If ENSURE_VALID_LANG is enabled and the language tag is invalid.



